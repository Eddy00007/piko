name: Build and Release jar.
on:
  push:
    branches:
      - Test
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        
      - name: Set Up Zulu JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '11'
          java-package: 'jdk'

      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew build

      - name: Extract Version from gradle.properties
        id: get_version
        run: |
          version=$(grep '^version' gradle.properties | cut -d'=' -f2 | xargs)
          echo "VERSION=$version" >> $GITHUB_ENV
          echo "Version found: $version"

      - name: Extract Changelog for Version
        id: extract_changelog
        run: |
          version_header="## [${{ env.VERSION }}]"
          changelog=$(awk "/^$version_header/,/^## \[/" CHANGELOG.md | sed -n "/^$version_header/,\$p" | sed '$d' || true)
          if [ -z "$changelog" ]; then
            echo "No changelog found for version ${{ env.VERSION }}"
            changelog="No changelog available for this release."
          fi
          changelog="${changelog//$'\n'/\\n}"
          echo "Extracted Changelog: $changelog"
          echo "CHANGELOG=$changelog" >> $GITHUB_ENV

      - name: Create Git Tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a "v${{ env.VERSION }}" -m "Release version ${{ env.VERSION }}"
          git push origin "v${{ env.VERSION }}"

      - name: Archive Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: build/libs/*.jar

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ env.VERSION }}"
          name: "${{ env.VERSION }}"
          files: |
            build/libs/*.jar
            patches.json
          body: |
            ## Changelog
            ${{ env.CHANGELOG }}
        env:
          GITHUB_TOKEN: ${{ secrets.Eve }}

      - name: Send Message to Telegram
        run: |
          changelog=$(git log -1 --pretty=format:"%s")

          message="Â¡Jefe! el parche (${VERSION}) se lanzÃ³ con Ã©xito. ðŸŽ‰
        
          Â¡Estoy segura de que lo disfrutarÃ¡! ðŸ˜Š
          Changelog:
          ${changelog}
        
          Espero que disfrute de esta actualizaciÃ³n. Si necesita algo mÃ¡s, no dudes en decÃ­rmelo. ðŸ˜˜"

          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
          -d chat_id="${{ secrets.CHAT_ID }}" \
          -d text="${message}"
